"""Add password, username and role to users

Revision ID: 67a73741ba20
Revises: ea439f734974
Create Date: 2024-10-11 07:30:17.720608

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "67a73741ba20"
down_revision: Union[str, None] = "ea439f734974"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    user_role_enum = postgresql.ENUM("ORGANIZER", "PARTICIPANT", name="user_role")
    user_role_enum.create(op.get_bind())

    op.add_column("users", sa.Column("username", sa.String(), nullable=False))
    op.add_column("users", sa.Column("hashed_password", sa.String(), nullable=False))
    op.add_column("users", sa.Column("role", user_role_enum, nullable=False))
    op.create_unique_constraint("users_username_unique_const", "users", ["username"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("users_username_unique_const", "users", type_="unique")
    op.drop_column("users", "role")
    op.drop_column("users", "hashed_password")
    op.drop_column("users", "username")
    op.execute("DROP TYPE user_role;")
    # ### end Alembic commands ###
